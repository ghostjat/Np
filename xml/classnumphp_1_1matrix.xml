<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classnumphp_1_1matrix" kind="class" language="PHP" prot="public">
    <compoundname>numphp::matrix</compoundname>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classnumphp_1_1matrix_1a898a823e880f6b3b3ed491146f8a0c18" prot="public" static="no" mutable="no">
        <type>const</type>
        <definition>const numphp\matrix::TWO_PI</definition>
        <argsstring></argsstring>
        <name>TWO_PI</name>
        <initializer>= 2. * M_PI</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="18" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnumphp_1_1matrix_1ab0934e9a4e8834c6d2147afe22a668e1" prot="public" static="no" mutable="no">
        <type>const</type>
        <definition>const numphp\matrix::EPSILON</definition>
        <argsstring></argsstring>
        <name>EPSILON</name>
        <initializer>= 1e-8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="18" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnumphp_1_1matrix_1a7ee6df1a775da9d64a1ea57a7bdd0873" prot="public" static="no" mutable="no">
        <type>const</type>
        <definition>const numphp\matrix::FLOAT</definition>
        <argsstring></argsstring>
        <name>FLOAT</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="19" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnumphp_1_1matrix_1a37c959147dd0f83ab064309d9696552a" prot="public" static="no" mutable="no">
        <type>const</type>
        <definition>const numphp\matrix::DOUBLE</definition>
        <argsstring></argsstring>
        <name>DOUBLE</name>
        <initializer>= 2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="19" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnumphp_1_1matrix_1ab92211b97c18654399b119697a4154b4" prot="public" static="no" mutable="no">
        <type>const</type>
        <definition>const numphp\matrix::INT</definition>
        <argsstring></argsstring>
        <name>INT</name>
        <initializer>= 3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="19" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnumphp_1_1matrix_1ab1ef5ccc7bfb065d887ac0702a9eb944" prot="public" static="no" mutable="no">
        <type></type>
        <definition>numphp\matrix::$data</definition>
        <argsstring></argsstring>
        <name>$data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="21" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnumphp_1_1matrix_1a895de4a7bec63f4c9616ef4c13b930e1" prot="public" static="no" mutable="no">
        <type></type>
        <definition>numphp\matrix::$row</definition>
        <argsstring></argsstring>
        <name>$row</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="21" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnumphp_1_1matrix_1a29fc1e641a999ee0fa3108a2e685d88b" prot="public" static="no" mutable="no">
        <type></type>
        <definition>numphp\matrix::$col</definition>
        <argsstring></argsstring>
        <name>$col</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="21" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnumphp_1_1matrix_1a249087dc5317c6a09b644edf92c4f950" prot="public" static="no" mutable="no">
        <type></type>
        <definition>numphp\matrix::$dtype</definition>
        <argsstring></argsstring>
        <name>$dtype</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="21" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="21" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classnumphp_1_1matrix_1af32e3918ee2965b5473e678b3029ef7e" prot="public" static="yes" mutable="no">
        <type>static</type>
        <definition>numphp\matrix::$_time</definition>
        <argsstring></argsstring>
        <name>$_time</name>
        <initializer>= <ref refid="classnumphp_1_1matrix_1a2a389c9077ca910be7c1c34d073f627f" kindref="member">null</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="22" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnumphp_1_1matrix_1ad1e221d724f630b3439eca1e5abe338e" prot="public" static="yes" mutable="no">
        <type>static</type>
        <definition>numphp\matrix::$_mem</definition>
        <argsstring></argsstring>
        <name>$_mem</name>
        <initializer>= <ref refid="classnumphp_1_1matrix_1a2a389c9077ca910be7c1c34d073f627f" kindref="member">null</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="22" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="22" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classnumphp_1_1matrix_1a50b2751e5f4666ac2aa5b60c3e32c70e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>static</type>
        <definition>static numphp\matrix::factory</definition>
        <argsstring>(int $row, int $col, int $dtype=self::FLOAT)</argsstring>
        <name>factory</name>
        <param>
          <type>int</type>
          <declname>$row</declname>
        </param>
        <param>
          <type>int</type>
          <declname>$col</declname>
        </param>
        <param>
          <type>int</type>
          <declname>$dtype</declname>
          <defval>self::FLOAT</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>create empty 2d matrix for given data type <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametertype>int</parametertype>
<parametername>$row</parametername>
</parameternamelist>
<parameterdescription>
<para>num of rows </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametertype>int</parametertype>
<parametername>$col</parametername>
</parameternamelist>
<parameterdescription>
<para>num of cols </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametertype>int</parametertype>
<parametername>$dtype</parametername>
</parameternamelist>
<parameterdescription>
<para>matrix data type float|double </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="31" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="31" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="classnumphp_1_1matrix_1a29f530c55fee1a02cbb96dc0b7833ecb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>static</type>
        <definition>static numphp\matrix::ar</definition>
        <argsstring>(array $data, int $dtype=self::FLOAT)</argsstring>
        <name>ar</name>
        <param>
          <type>array</type>
          <declname>$data</declname>
        </param>
        <param>
          <type>int</type>
          <declname>$dtype</declname>
          <defval>self::FLOAT</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>create 2d matrix using php array <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametertype>array</parametertype>
<parametername>$data</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametertype>int</parametertype>
<parametername>$dtype</parametername>
</parameternamelist>
<parameterdescription>
<para>matrix data type float|double </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="41" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="41" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="classnumphp_1_1matrix_1addbcb2030bd68ed174c5c7b3ac48f88b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>static</type>
        <definition>static numphp\matrix::ones</definition>
        <argsstring>(int $row, int $col, int $dtype=self::FLOAT)</argsstring>
        <name>ones</name>
        <param>
          <type>int</type>
          <declname>$row</declname>
        </param>
        <param>
          <type>int</type>
          <declname>$col</declname>
        </param>
        <param>
          <type>int</type>
          <declname>$dtype</declname>
          <defval>self::FLOAT</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>create one like 2d matrix <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametertype>int</parametertype>
<parametername>$row</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametertype>int</parametertype>
<parametername>$col</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="58" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="58" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="classnumphp_1_1matrix_1ab2f6658b71b2d82150ffd971d51973c0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>static</type>
        <definition>static numphp\matrix::randn</definition>
        <argsstring>(int $row, int $col, int $dtype=self::FLOAT)</argsstring>
        <name>randn</name>
        <param>
          <type>int</type>
          <declname>$row</declname>
        </param>
        <param>
          <type>int</type>
          <declname>$col</declname>
        </param>
        <param>
          <type>int</type>
          <declname>$dtype</declname>
          <defval>self::FLOAT</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create Matrix with random values <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametertype>int</parametertype>
<parametername>$row</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametertype>int</parametertype>
<parametername>$col</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametertype>int</parametertype>
<parametername>$dtype</parametername>
</parameternamelist>
<parameterdescription>
<para>Float|Double </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="75" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="75" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="classnumphp_1_1matrix_1a86e77dec7ed3d5037b6785ae99b71327" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>static</type>
        <definition>static numphp\matrix::uniform</definition>
        <argsstring>(int $row, int $col, int $dtype=self::FLOAT)</argsstring>
        <name>uniform</name>
        <param>
          <type>int</type>
          <declname>$row</declname>
        </param>
        <param>
          <type>int</type>
          <declname>$col</declname>
        </param>
        <param>
          <type>int</type>
          <declname>$dtype</declname>
          <defval>self::FLOAT</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return 2d matrix with uniform values <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametertype>int</parametertype>
<parametername>$row</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametertype>int</parametertype>
<parametername>$col</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametertype>int</parametertype>
<parametername>$dtype</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="93" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="93" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="classnumphp_1_1matrix_1a04e03d423dcb93afd5f0d9899b0345e2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>static</type>
        <definition>static numphp\matrix::zeros</definition>
        <argsstring>(int $row, int $col, int $dtype=self::FLOAT)</argsstring>
        <name>zeros</name>
        <param>
          <type>int</type>
          <declname>$row</declname>
        </param>
        <param>
          <type>int</type>
          <declname>$col</declname>
        </param>
        <param>
          <type>int</type>
          <declname>$dtype</declname>
          <defval>self::FLOAT</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return a zero matrix with the given dimensions. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametertype>int</parametertype>
<parametername>$row</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametertype>int</parametertype>
<parametername>$col</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametertype>int</parametertype>
<parametername>$dtype</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="111" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="111" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="classnumphp_1_1matrix_1a2a389c9077ca910be7c1c34d073f627f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>static</type>
        <definition>static numphp\matrix::null</definition>
        <argsstring>(int $row, int $col, int $dtype=self::FLOAT)</argsstring>
        <name>null</name>
        <param>
          <type>int</type>
          <declname>$row</declname>
        </param>
        <param>
          <type>int</type>
          <declname>$col</declname>
        </param>
        <param>
          <type>int</type>
          <declname>$dtype</declname>
          <defval>self::FLOAT</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>create a null like 2d matrix <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametertype>int</parametertype>
<parametername>$row</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametertype>int</parametertype>
<parametername>$col</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="127" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="127" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="classnumphp_1_1matrix_1ac647da171a7f8c1735f2e3f92de6e8cc" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>static</type>
        <definition>static numphp\matrix::full</definition>
        <argsstring>(int $row, int $col, $val, int $dtype=self::FLOAT)</argsstring>
        <name>full</name>
        <param>
          <type>int</type>
          <declname>$row</declname>
        </param>
        <param>
          <type>int</type>
          <declname>$col</declname>
        </param>
        <param>
          <declname>$val</declname>
        </param>
        <param>
          <type>int</type>
          <declname>$dtype</declname>
          <defval>self::FLOAT</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>create a 2d matrix with given scalar value <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametertype>int</parametertype>
<parametername>$row</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametertype>int</parametertype>
<parametername>$col</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametertype>int</parametertype>
<parametertype>float</parametertype>
<parametertype>double</parametertype>
<parametername>$val</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="144" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="144" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="classnumphp_1_1matrix_1a3bc04d3e50be7deb74b879495a4559ba" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>static</type>
        <definition>static numphp\matrix::diagonal</definition>
        <argsstring>(array $elements, int $dtype=self::FLOAT)</argsstring>
        <name>diagonal</name>
        <param>
          <type>array</type>
          <declname>$elements</declname>
        </param>
        <param>
          <type>int</type>
          <declname>$dtype</declname>
          <defval>self::FLOAT</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>create a diagonal 2d matrix with given 1d array; <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametertype>array</parametertype>
<parametername>$elements</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="159" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="159" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="classnumphp_1_1matrix_1a5d01e05f0264dd103c0056dfffad078f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>static</type>
        <definition>static numphp\matrix::poisson</definition>
        <argsstring>(int $row, int $col, float $lambda=1.0, int $dtype=self::FLOAT)</argsstring>
        <name>poisson</name>
        <param>
          <type>int</type>
          <declname>$row</declname>
        </param>
        <param>
          <type>int</type>
          <declname>$col</declname>
        </param>
        <param>
          <type>float</type>
          <declname>$lambda</declname>
          <defval>1.0</defval>
        </param>
        <param>
          <type>int</type>
          <declname>$dtype</declname>
          <defval>self::FLOAT</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Generate a m x n matrix with elements from a Poisson distribution.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametertype>int</parametertype>
<parametername>$row</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametertype>int</parametertype>
<parametername>$col</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametertype>float</parametertype>
<parametername>$lambda</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametertype>int</parametertype>
<parametername>$dtype</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="177" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="177" bodyend="197"/>
      </memberdef>
      <memberdef kind="function" id="classnumphp_1_1matrix_1a93c6eef6b6ddcc68f124c1b2246a267f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>static</type>
        <definition>static numphp\matrix::gaussian</definition>
        <argsstring>(int $row, int $col, int $dtype=self::FLOAT)</argsstring>
        <name>gaussian</name>
        <param>
          <type>int</type>
          <declname>$row</declname>
        </param>
        <param>
          <type>int</type>
          <declname>$col</declname>
        </param>
        <param>
          <type>int</type>
          <declname>$dtype</declname>
          <defval>self::FLOAT</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return a standard normally distributed random matrix i.e values between -1 and 1. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametertype>int</parametertype>
<parametername>$row</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametertype>int</parametertype>
<parametername>$col</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametertype>int</parametertype>
<parametername>$dtype</parametername>
</parameternamelist>
<parameterdescription>
<para>Description </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="207" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="207" bodyend="235"/>
      </memberdef>
      <memberdef kind="function" id="classnumphp_1_1matrix_1a10584e50c8e5909c9fd211fc752ca7b4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>static</type>
        <definition>static numphp\matrix::identity</definition>
        <argsstring>(int $n, int $dtype=self::FLOAT)</argsstring>
        <name>identity</name>
        <param>
          <type>int</type>
          <declname>$n</declname>
        </param>
        <param>
          <type>int</type>
          <declname>$dtype</declname>
          <defval>self::FLOAT</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>create an identity matrix with the given dimensions. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametertype>int</parametertype>
<parametername>$n</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametertype>int</parametertype>
<parametername>$dtype</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>matrix </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="244" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="244" bodyend="256"/>
      </memberdef>
      <memberdef kind="function" id="classnumphp_1_1matrix_1a604df72809ae1cabb3cc6df9e5af19f1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>static</type>
        <definition>static numphp\matrix::is_zero</definition>
        <argsstring>($d)</argsstring>
        <name>is_zero</name>
        <param>
          <declname>$d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametertype>int</parametertype>
<parametertype>float</parametertype>
<parametername>$d</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>bool </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="760" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="760" bodyend="765"/>
      </memberdef>
      <memberdef kind="function" id="classnumphp_1_1matrix_1ac5d4ea1cc38a4536b133f8aa43e99178" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>static</type>
        <definition>static numphp\matrix::time</definition>
        <argsstring>()</argsstring>
        <name>time</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>set Timer, get total time </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="1744" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="1744" bodyend="1750"/>
      </memberdef>
      <memberdef kind="function" id="classnumphp_1_1matrix_1a44648bdf7eedb6f4d71a85a71e4d8a2b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>static</type>
        <definition>static numphp\matrix::getMemory</definition>
        <argsstring>()</argsstring>
        <name>getMemory</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>set memory dog, get total memory </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="1755" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="1755" bodyend="1763"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classnumphp_1_1matrix_1a28aeeed8d11d34face405f68a215eb49" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>numphp\matrix::minimum</definition>
        <argsstring>(\numphp\matrix $m)</argsstring>
        <name>minimum</name>
        <param>
          <type>\<ref refid="classnumphp_1_1matrix" kindref="compound">numphp\matrix</ref></type>
          <declname>$m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the element-wise minimum of two matrices.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametertype>\numphp\matrix</parametertype>
<parametername>$m</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>matrix </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="264" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="264" bodyend="274"/>
      </memberdef>
      <memberdef kind="function" id="classnumphp_1_1matrix_1a0c576ab7431bca5317b97cbe1911024e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>numphp\matrix::maximum</definition>
        <argsstring>(\numphp\matrix $m)</argsstring>
        <name>maximum</name>
        <param>
          <type>\<ref refid="classnumphp_1_1matrix" kindref="compound">numphp\matrix</ref></type>
          <declname>$m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the element-wise maximum of two matrices.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametertype>\numphp\matrix</parametertype>
<parametername>$m</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>matrix </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="282" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="282" bodyend="292"/>
      </memberdef>
      <memberdef kind="function" id="classnumphp_1_1matrix_1a048b5a0215d2732644b1567b0e6ddbb4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>numphp\matrix::convolve</definition>
        <argsstring>(\numphp\matrix $m, int $stride=1)</argsstring>
        <name>convolve</name>
        <param>
          <type>\<ref refid="classnumphp_1_1matrix" kindref="compound">numphp\matrix</ref></type>
          <declname>$m</declname>
        </param>
        <param>
          <type>int</type>
          <declname>$stride</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>2D convolution between a matrix ma and kernel kb, with a given stride. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametertype>\numphp\matrix</parametertype>
<parametername>$m</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametertype>int</parametertype>
<parametername>$stride</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>matrix </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="300" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="300" bodyend="302"/>
      </memberdef>
      <memberdef kind="function" id="classnumphp_1_1matrix_1ad867ea81e0bb5064613b745c612d8d6e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>numphp\matrix::det</definition>
        <argsstring>()</argsstring>
        <name>det</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Calculate the determinant of the matrix. <simplesect kind="return"><para>float </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="308" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="308" bodyend="319"/>
      </memberdef>
      <memberdef kind="function" id="classnumphp_1_1matrix_1a68b6174147b35a6d15c8f5f93a65526b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>numphp\matrix::trace</definition>
        <argsstring>()</argsstring>
        <name>trace</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the trace of the matrix i.e the sum of all diagonal elements of a square matrix. <simplesect kind="return"><para>float </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="325" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="325" bodyend="338"/>
      </memberdef>
      <memberdef kind="function" id="classnumphp_1_1matrix_1adbae489080ca7ad5b83b00f17ab1b5e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>numphp\matrix::dignoalInterChange</definition>
        <argsstring>()</argsstring>
        <name>dignoalInterChange</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>dignoalInterChange </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="343" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="343" bodyend="350"/>
      </memberdef>
      <memberdef kind="function" id="classnumphp_1_1matrix_1a358f05bd0af0321c62785b79f1e6a147" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>numphp\matrix::dot</definition>
        <argsstring>(\numphp\matrix|\numphp\vector $d)</argsstring>
        <name>dot</name>
        <param>
          <type>\<ref refid="classnumphp_1_1matrix" kindref="compound">numphp\matrix</ref>|\<ref refid="classnumphp_1_1vector" kindref="compound">numphp\vector</ref></type>
          <declname>$d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>get dot product of m.m or m.v</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametertype>\numphp\matrix</parametertype>
<parametertype>\numphp\vector</parametertype>
<parametername>$d</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>matrix|vector </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="361" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="361" bodyend="368"/>
      </memberdef>
      <memberdef kind="function" id="classnumphp_1_1matrix_1a3001b47f83eb8cfe7265bb20f2eba439" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>numphp\matrix::multiply</definition>
        <argsstring>(int|float|vector|matrix $m)</argsstring>
        <name>multiply</name>
        <param>
          <type>int|float|<ref refid="classnumphp_1_1vector" kindref="compound">vector</ref>|<ref refid="classnumphp_1_1matrix" kindref="compound">matrix</ref></type>
          <declname>$m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>multiply this matrix with another matrix|scalar element-wise Matrix Scalar multiplication <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametertype>int</parametertype>
<parametertype>float</parametertype>
<parametertype>matrix</parametertype>
<parametertype>vector</parametertype>
<parametername>$m</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>matrix|vector </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="419" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="419" bodyend="427"/>
      </memberdef>
      <memberdef kind="function" id="classnumphp_1_1matrix_1a5c68dc1774579f5de371feeda552e9c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>numphp\matrix::sum</definition>
        <argsstring>(int|float|matrix|vector $m)</argsstring>
        <name>sum</name>
        <param>
          <type>int|float|<ref refid="classnumphp_1_1matrix" kindref="compound">matrix</ref>|<ref refid="classnumphp_1_1vector" kindref="compound">vector</ref></type>
          <declname>$m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sum of two matrix or a scalar to current matrix</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametertype>int</parametertype>
<parametertype>float</parametertype>
<parametertype>\numphp\matrix</parametertype>
<parametername>$m</parametername>
</parameternamelist>
<parameterdescription>
<para>matrix|$scalar to add this matrix </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="494" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="494" bodyend="502"/>
      </memberdef>
      <memberdef kind="function" id="classnumphp_1_1matrix_1aa796eccaf47da0d712f9198a04782433" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>numphp\matrix::subtract</definition>
        <argsstring>(int|float|matrix|vector $d)</argsstring>
        <name>subtract</name>
        <param>
          <type>int|float|<ref refid="classnumphp_1_1matrix" kindref="compound">matrix</ref>|<ref refid="classnumphp_1_1vector" kindref="compound">vector</ref></type>
          <declname>$d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>subtract another matrix, vector or a scalar to this matrix <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametertype>int</parametertype>
<parametertype>float</parametertype>
<parametertype>matrix</parametertype>
<parametertype>vector</parametertype>
<parametername>$d</parametername>
</parameternamelist>
<parameterdescription>
<para>matrix|$scalar to subtract this matrix </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="543" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="543" bodyend="551"/>
      </memberdef>
      <memberdef kind="function" id="classnumphp_1_1matrix_1a2508f1a86f390d0865cb4486bb3bfe7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>numphp\matrix::divide</definition>
        <argsstring>(int|float|matrix|vector $d)</argsstring>
        <name>divide</name>
        <param>
          <type>int|float|<ref refid="classnumphp_1_1matrix" kindref="compound">matrix</ref>|<ref refid="classnumphp_1_1vector" kindref="compound">vector</ref></type>
          <declname>$d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the division of two elements, element-wise. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametertype>int</parametertype>
<parametertype>float</parametertype>
<parametertype>matrix</parametertype>
<parametername>$m</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>matrix </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="592" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="592" bodyend="600"/>
      </memberdef>
      <memberdef kind="function" id="classnumphp_1_1matrix_1a7fd3c0fdf32a2cc31b5ab1b4c9008b78" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>numphp\matrix::pow</definition>
        <argsstring>(int|float|matrix|vector $d)</argsstring>
        <name>pow</name>
        <param>
          <type>int|float|<ref refid="classnumphp_1_1matrix" kindref="compound">matrix</ref>|<ref refid="classnumphp_1_1vector" kindref="compound">vector</ref></type>
          <declname>$d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Raise this matrix to the power of the element-wise entry in another matrix.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametertype>int</parametertype>
<parametertype>float</parametertype>
<parametertype>matrix</parametertype>
<parametername>$m</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>matrix </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="647" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="647" bodyend="655"/>
      </memberdef>
      <memberdef kind="function" id="classnumphp_1_1matrix_1ae824e45a04d31e8f437032585a836007" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>numphp\matrix::mod</definition>
        <argsstring>(int|float|matrix|vector $d)</argsstring>
        <name>mod</name>
        <param>
          <type>int|float|<ref refid="classnumphp_1_1matrix" kindref="compound">matrix</ref>|<ref refid="classnumphp_1_1vector" kindref="compound">vector</ref></type>
          <declname>$d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Calculate the modulus i.e remainder of division between this matrix and another matrix. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametertype>int</parametertype>
<parametertype>float</parametertype>
<parametertype>matrix</parametertype>
<parametertype>vector</parametertype>
<parametername>$d</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>matrix </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="696" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="696" bodyend="708"/>
      </memberdef>
      <memberdef kind="function" id="classnumphp_1_1matrix_1a97cb65c313feeaa9d8df44871c7bb050" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>numphp\matrix::reciprocal</definition>
        <argsstring>()</argsstring>
        <name>reciprocal</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the element-wise reciprocal of the matrix.</para><para><simplesect kind="return"><para>matrix </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="751" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="751" bodyend="753"/>
      </memberdef>
      <memberdef kind="function" id="classnumphp_1_1matrix_1ae7b1659dc8f5986fd6366cc8c9dca176" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>numphp\matrix::is_rowZero</definition>
        <argsstring>(int $row)</argsstring>
        <name>is_rowZero</name>
        <param>
          <type>int</type>
          <declname>$row</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>is row zero <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametertype>int</parametertype>
<parametername>$row</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>bool </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="772" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="772" bodyend="779"/>
      </memberdef>
      <memberdef kind="function" id="classnumphp_1_1matrix_1a07b8e6f7ae5e9e2e097f6b1e878ca841" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>numphp\matrix::has_ZeroRow</definition>
        <argsstring>()</argsstring>
        <name>has_ZeroRow</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>bool </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="785" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="785" bodyend="792"/>
      </memberdef>
      <memberdef kind="function" id="classnumphp_1_1matrix_1aae5be8e1c337b62384060fb25dca9c25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>numphp\matrix::transpose</definition>
        <argsstring>()</argsstring>
        <name>transpose</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Transpose the matrix i.e row become cols and cols become rows. <simplesect kind="return"><para></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="798" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="798" bodyend="806"/>
      </memberdef>
      <memberdef kind="function" id="classnumphp_1_1matrix_1a72ab5dccd5e6e904929c0c10f79692c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>numphp\matrix::swapValue</definition>
        <argsstring>(int $index1, int $index2)</argsstring>
        <name>swapValue</name>
        <param>
          <type>int</type>
          <declname>$index1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>$index2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>swap specific values in tensor <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametertype>int</parametertype>
<parametername>$index1</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametertype>int</parametertype>
<parametername>$index2</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="813" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="813" bodyend="817"/>
      </memberdef>
      <memberdef kind="function" id="classnumphp_1_1matrix_1a9b7af4928ed123ab0eba000a7bc42230" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>numphp\matrix::swapRows</definition>
        <argsstring>(int $r1, int $r2)</argsstring>
        <name>swapRows</name>
        <param>
          <type>int</type>
          <declname>$r1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>$r2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>swap specific rows in tensor <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametertype>int</parametertype>
<parametername>$r1</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametertype>int</parametertype>
<parametername>$r2</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="824" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="824" bodyend="830"/>
      </memberdef>
      <memberdef kind="function" id="classnumphp_1_1matrix_1ada47d06558e64477329d32c7cdd11ae1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>numphp\matrix::swapCols</definition>
        <argsstring>(int $c1, int $c2)</argsstring>
        <name>swapCols</name>
        <param>
          <type>int</type>
          <declname>$c1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>$c2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>swap specific cols in tensor <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametertype>int</parametertype>
<parametername>$c1</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametertype>int</parametertype>
<parametername>$c2</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="837" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="837" bodyend="843"/>
      </memberdef>
      <memberdef kind="function" id="classnumphp_1_1matrix_1a999b44abbe4e29966f8e1e69c868a1f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>numphp\matrix::scale</definition>
        <argsstring>(float $c)</argsstring>
        <name>scale</name>
        <param>
          <type>float</type>
          <declname>$c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametertype>float</parametertype>
<parametername>$c</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="850" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="850" bodyend="858"/>
      </memberdef>
      <memberdef kind="function" id="classnumphp_1_1matrix_1a53e4f3c35da4f452b798c38d3ac1f061" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>numphp\matrix::scaleRow</definition>
        <argsstring>(int $row, float $c)</argsstring>
        <name>scaleRow</name>
        <param>
          <type>int</type>
          <declname>$row</declname>
        </param>
        <param>
          <type>float</type>
          <declname>$c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametertype>int</parametertype>
<parametername>$row</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametertype>float</parametertype>
<parametername>$c</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="865" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="865" bodyend="869"/>
      </memberdef>
      <memberdef kind="function" id="classnumphp_1_1matrix_1a918f392341d9e3f5519740ad8f883f7e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>numphp\matrix::addScaleRow</definition>
        <argsstring>(int $r1, int $r2, float $c)</argsstring>
        <name>addScaleRow</name>
        <param>
          <type>int</type>
          <declname>$r1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>$r2</declname>
        </param>
        <param>
          <type>float</type>
          <declname>$c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametertype>int</parametertype>
<parametername>$r1</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametertype>int</parametertype>
<parametername>$r2</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametertype>float</parametertype>
<parametername>$c</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="877" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="877" bodyend="881"/>
      </memberdef>
      <memberdef kind="function" id="classnumphp_1_1matrix_1a2500ad164734cc2c5d5dec8ddaa7f00a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>numphp\matrix::joinLeft</definition>
        <argsstring>(\numphp\matrix $m)</argsstring>
        <name>joinLeft</name>
        <param>
          <type>\<ref refid="classnumphp_1_1matrix" kindref="compound">numphp\matrix</ref></type>
          <declname>$m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Attach given matrix to the left of this matrix.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametertype>\numphp\matrix</parametertype>
<parametername>$matrix</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="889" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="889" bodyend="904"/>
      </memberdef>
      <memberdef kind="function" id="classnumphp_1_1matrix_1a30b0daedefb110a3fa396ae586c36266" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>numphp\matrix::joinRight</definition>
        <argsstring>(\numphp\matrix $m)</argsstring>
        <name>joinRight</name>
        <param>
          <type>\<ref refid="classnumphp_1_1matrix" kindref="compound">numphp\matrix</ref></type>
          <declname>$m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Join matrix m to the Right of this matrix. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametertype>\numphp\matrix</parametertype>
<parametername>$m</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>matrix </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="911" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="911" bodyend="926"/>
      </memberdef>
      <memberdef kind="function" id="classnumphp_1_1matrix_1aaaf45f5c0d311878adbf47fbbad0ad0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>numphp\matrix::joinAbove</definition>
        <argsstring>(\numphp\matrix $m)</argsstring>
        <name>joinAbove</name>
        <param>
          <type>\<ref refid="classnumphp_1_1matrix" kindref="compound">numphp\matrix</ref></type>
          <declname>$m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Join matrix m Above this matrix. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametertype>\numphp\matrix</parametertype>
<parametername>$m</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>matrix </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="933" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="933" bodyend="948"/>
      </memberdef>
      <memberdef kind="function" id="classnumphp_1_1matrix_1a4a209222c48afa187404809b75bf1563" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>numphp\matrix::joinBelow</definition>
        <argsstring>(\numphp\matrix $m)</argsstring>
        <name>joinBelow</name>
        <param>
          <type>\<ref refid="classnumphp_1_1matrix" kindref="compound">numphp\matrix</ref></type>
          <declname>$m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Join matrix m below this matrix. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametertype>\numphp\matrix</parametertype>
<parametername>$m</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>matrix </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="955" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="955" bodyend="970"/>
      </memberdef>
      <memberdef kind="function" id="classnumphp_1_1matrix_1afc5ab843c5a9932860e8903bcc6fcc49" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>numphp\matrix::ref</definition>
        <argsstring>()</argsstring>
        <name>ref</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="972" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="972" bodyend="991"/>
      </memberdef>
      <memberdef kind="function" id="classnumphp_1_1matrix_1a53b1445728b4e7cbba20c12760285449" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>numphp\matrix::cholesky</definition>
        <argsstring>()</argsstring>
        <name>cholesky</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="993" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="993" bodyend="1018"/>
      </memberdef>
      <memberdef kind="function" id="classnumphp_1_1matrix_1a1e1bffd85910ee5157630e296206b75c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>numphp\matrix::rref</definition>
        <argsstring>()</argsstring>
        <name>rref</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>RREF The reduced row echelon form (RREF) of a matrix. <simplesect kind="return"><para></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="1025" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="1025" bodyend="1060"/>
      </memberdef>
      <memberdef kind="function" id="classnumphp_1_1matrix_1a4fc4e2887cf626e224219d96fb0f9d71" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>numphp\matrix::copyMatrix</definition>
        <argsstring>()</argsstring>
        <name>copyMatrix</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>make copy of the matrix <simplesect kind="return"><para></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="1066" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="1066" bodyend="1068"/>
      </memberdef>
      <memberdef kind="function" id="classnumphp_1_1matrix_1af35a9278b0caa6375867d675a9c4f3df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>numphp\matrix::diminish_left</definition>
        <argsstring>(int $cols)</argsstring>
        <name>diminish_left</name>
        <param>
          <type>int</type>
          <declname>$cols</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametertype>int</parametertype>
<parametername>$cols</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="1075" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="1075" bodyend="1083"/>
      </memberdef>
      <memberdef kind="function" id="classnumphp_1_1matrix_1a1038de7308d939d14d8763e1edcce5f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>numphp\matrix::diminish_right</definition>
        <argsstring>(int $cols)</argsstring>
        <name>diminish_right</name>
        <param>
          <type>int</type>
          <declname>$cols</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametertype>int</parametertype>
<parametername>$cols</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="1090" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="1090" bodyend="1098"/>
      </memberdef>
      <memberdef kind="function" id="classnumphp_1_1matrix_1aa73193cd6c94bcc271823a439f370449" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>numphp\matrix::argMax</definition>
        <argsstring>()</argsstring>
        <name>argMax</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the index of the maximum element in every row of the matrix. <simplesect kind="return"><para>int </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="1104" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="1104" bodyend="1116"/>
      </memberdef>
      <memberdef kind="function" id="classnumphp_1_1matrix_1a653af247c0a0b922c260c194340875e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>numphp\matrix::argMin</definition>
        <argsstring>()</argsstring>
        <name>argMin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the index of the minimum element in every row of the matrix. <simplesect kind="return"><para>int </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="1122" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="1122" bodyend="1134"/>
      </memberdef>
      <memberdef kind="function" id="classnumphp_1_1matrix_1a6309365977d7adcf5fd7279233c124e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>numphp\matrix::setData</definition>
        <argsstring>(int|float|array $data, bool $dignoal=false)</argsstring>
        <name>setData</name>
        <param>
          <type>int|float|array</type>
          <declname>$data</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>$dignoal</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set given data in matrix <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametertype>int</parametertype>
<parametertype>float</parametertype>
<parametertype>array</parametertype>
<parametername>$data</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametertype>bool</parametertype>
<parametername>$dignoal</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="1142" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="1142" bodyend="1162"/>
      </memberdef>
      <memberdef kind="function" id="classnumphp_1_1matrix_1a581fd4bd988d23b7fdf08d9018a7c0cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>numphp\matrix::getShape</definition>
        <argsstring>()</argsstring>
        <name>getShape</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>get the shape of matrix <simplesect kind="return"><para>object </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="1168" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="1168" bodyend="1170"/>
      </memberdef>
      <memberdef kind="function" id="classnumphp_1_1matrix_1a0593a040ae5fe8f8f501483973366f90" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>numphp\matrix::getSize</definition>
        <argsstring>()</argsstring>
        <name>getSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>get the number of elements in the tensor. <simplesect kind="return"><para>int </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="1176" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="1176" bodyend="1178"/>
      </memberdef>
      <memberdef kind="function" id="classnumphp_1_1matrix_1a6a2e6f219c474e7319d00bb40005b327" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>numphp\matrix::isSquare</definition>
        <argsstring>()</argsstring>
        <name>isSquare</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>bool </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="1184" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="1184" bodyend="1189"/>
      </memberdef>
      <memberdef kind="function" id="classnumphp_1_1matrix_1a2277a2e7616a450cc77c2804c7a69d89" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>numphp\matrix::getDtype</definition>
        <argsstring>()</argsstring>
        <name>getDtype</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="1191" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="1191" bodyend="1193"/>
      </memberdef>
      <memberdef kind="function" id="classnumphp_1_1matrix_1a6a4b6a6926347fa713e02f4621a9507b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>numphp\matrix::rowAsVector</definition>
        <argsstring>(int $index)</argsstring>
        <name>rowAsVector</name>
        <param>
          <type>int</type>
          <declname>$index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return a row as vector from the matrix. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametertype>int</parametertype>
<parametername>$index</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="1200" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="1200" bodyend="1206"/>
      </memberdef>
      <memberdef kind="function" id="classnumphp_1_1matrix_1a9ab091c4ae375ce684abe2e4d76054c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>numphp\matrix::colAsVector</definition>
        <argsstring>(int $index)</argsstring>
        <name>colAsVector</name>
        <param>
          <type>int</type>
          <declname>$index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return a col as vector from the matrix. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametertype>int</parametertype>
<parametername>$index</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="1213" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="1213" bodyend="1219"/>
      </memberdef>
      <memberdef kind="function" id="classnumphp_1_1matrix_1a988fa6917dbc232ff76b8651dadc2e89" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>numphp\matrix::diagonalAsVector</definition>
        <argsstring>()</argsstring>
        <name>diagonalAsVector</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the diagonal elements of a square matrix as a vector. <simplesect kind="return"><para></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="1225" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="1225" bodyend="1234"/>
      </memberdef>
      <memberdef kind="function" id="classnumphp_1_1matrix_1a0305139b6278496b006c3fde8be692bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>numphp\matrix::asArray</definition>
        <argsstring>()</argsstring>
        <name>asArray</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the elements of the matrix in a 2-d array. <simplesect kind="return"><para>array </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="1240" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="1240" bodyend="1248"/>
      </memberdef>
      <memberdef kind="function" id="classnumphp_1_1matrix_1a97dc366d2fd9ae8af0b4137ce6ff7883" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>numphp\matrix::getDiagonalVal</definition>
        <argsstring>(int $i)</argsstring>
        <name>getDiagonalVal</name>
        <param>
          <type>int</type>
          <declname>$i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>get a diagonal value from matrix <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametertype>int</parametertype>
<parametername>$i</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>type </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="1255" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="1255" bodyend="1259"/>
      </memberdef>
      <memberdef kind="function" id="classnumphp_1_1matrix_1ae8aa45df174ee992fa648739a4bdd373" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>numphp\matrix::inverse</definition>
        <argsstring>()</argsstring>
        <name>inverse</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compute the multiplicative inverse of the matrix. <simplesect kind="return"><para>matrix|null </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="1266" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="1266" bodyend="1283"/>
      </memberdef>
      <memberdef kind="function" id="classnumphp_1_1matrix_1a72fc2577837ea9ee46fea1502dbb1792" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>numphp\matrix::pseudoInverse</definition>
        <argsstring>()</argsstring>
        <name>pseudoInverse</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compute the (Moore-Penrose) pseudo inverse of the general matrix. <simplesect kind="return"><para>matrix|null </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="1289" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="1289" bodyend="1312"/>
      </memberdef>
      <memberdef kind="function" id="classnumphp_1_1matrix_1a5ef21a96407d69a3c06eafb71180af65" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>numphp\matrix::svd</definition>
        <argsstring>()</argsstring>
        <name>svd</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compute the singular value decomposition of a matrix and return an object of the singular values and unitary matrices</para><para><simplesect kind="return"><para>object (u,s,v) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="1320" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="1320" bodyend="1334"/>
      </memberdef>
      <memberdef kind="function" id="classnumphp_1_1matrix_1a278c7d7686f14e8bc636ee6ac23fb3f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>numphp\matrix::eign</definition>
        <argsstring>(bool $symmetric=false)</argsstring>
        <name>eign</name>
        <param>
          <type>bool</type>
          <declname>$symmetric</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compute the eigen decomposition of a general matrix. return the eigenvalues and eigenvectors as object <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametertype>bool</parametertype>
<parametername>$symmetric</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>object (eignVal,eignVec) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="1342" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="1342" bodyend="1363"/>
      </memberdef>
      <memberdef kind="function" id="classnumphp_1_1matrix_1a1d8d4268c1522c012bef00b60a027866" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>numphp\matrix::lu</definition>
        <argsstring>()</argsstring>
        <name>lu</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compute the LU factorization of matrix. return lower, upper, and permutation matrices as object. <simplesect kind="return"><para>object (l,u,p) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="1370" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="1370" bodyend="1409"/>
      </memberdef>
      <memberdef kind="function" id="classnumphp_1_1matrix_1a59406f38b2d2c4157f769026d8123caf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>numphp\matrix::normL1</definition>
        <argsstring>()</argsstring>
        <name>normL1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the L1 norm of the matrix. <simplesect kind="return"><para>float </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="1415" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="1415" bodyend="1417"/>
      </memberdef>
      <memberdef kind="function" id="classnumphp_1_1matrix_1a999c7b46196534be5ce12cc68a4fa9e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>numphp\matrix::normL2</definition>
        <argsstring>()</argsstring>
        <name>normL2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the L2 norm of the matrix. <simplesect kind="return"><para>float </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="1423" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="1423" bodyend="1425"/>
      </memberdef>
      <memberdef kind="function" id="classnumphp_1_1matrix_1ac46dc732b2fbf9a04369d676e5a92af2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>numphp\matrix::normINF</definition>
        <argsstring>()</argsstring>
        <name>normINF</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the L1 norm of the matrix. <simplesect kind="return"><para>float </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="1431" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="1431" bodyend="1433"/>
      </memberdef>
      <memberdef kind="function" id="classnumphp_1_1matrix_1ac28f97d08c1f719a5fb53972d6f915e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>numphp\matrix::normFrob</definition>
        <argsstring>()</argsstring>
        <name>normFrob</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return the Frobenius norm of the matrix. <simplesect kind="return"><para>float </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="1439" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="1439" bodyend="1441"/>
      </memberdef>
      <memberdef kind="function" id="classnumphp_1_1matrix_1a8425719f5bff5d09db0a266a3f407082" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>numphp\matrix::map</definition>
        <argsstring>(callable $func)</argsstring>
        <name>map</name>
        <param>
          <type>callable</type>
          <declname>$func</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Run a function over all of the elements in the matrix. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametertype>callable</parametertype>
<parametername>$func</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="1448" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="1448" bodyend="1456"/>
      </memberdef>
      <memberdef kind="function" id="classnumphp_1_1matrix_1acbec4a9a79ebcb80dd41f51c37697f3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>numphp\matrix::abs</definition>
        <argsstring>()</argsstring>
        <name>abs</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="1458" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="1458" bodyend="1460"/>
      </memberdef>
      <memberdef kind="function" id="classnumphp_1_1matrix_1a0a343891b99ae56d21109e8124a2b020" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>numphp\matrix::sqrt</definition>
        <argsstring>()</argsstring>
        <name>sqrt</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="1462" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="1462" bodyend="1464"/>
      </memberdef>
      <memberdef kind="function" id="classnumphp_1_1matrix_1a58f7978b9ae62d6cfb071446989a3f27" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>numphp\matrix::exp</definition>
        <argsstring>()</argsstring>
        <name>exp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="1466" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="1466" bodyend="1468"/>
      </memberdef>
      <memberdef kind="function" id="classnumphp_1_1matrix_1a323550cd5b190ba253421405daf8ff00" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>numphp\matrix::exp1</definition>
        <argsstring>()</argsstring>
        <name>exp1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="1470" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="1470" bodyend="1472"/>
      </memberdef>
      <memberdef kind="function" id="classnumphp_1_1matrix_1ac4dc1004a05d42abd8df91ce3f6bf4e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>numphp\matrix::log</definition>
        <argsstring>(float $b=M_E)</argsstring>
        <name>log</name>
        <param>
          <type>float</type>
          <declname>$b</declname>
          <defval>M_E</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="1474" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="1474" bodyend="1476"/>
      </memberdef>
      <memberdef kind="function" id="classnumphp_1_1matrix_1a28d2723d3a12f11d23f1c5d1da5a7ba5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>numphp\matrix::log1p</definition>
        <argsstring>()</argsstring>
        <name>log1p</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="1478" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="1478" bodyend="1480"/>
      </memberdef>
      <memberdef kind="function" id="classnumphp_1_1matrix_1a2f57b3d5814e124baf09cc5407b6aa9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>numphp\matrix::sin</definition>
        <argsstring>()</argsstring>
        <name>sin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="1482" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="1482" bodyend="1484"/>
      </memberdef>
      <memberdef kind="function" id="classnumphp_1_1matrix_1a617086ccfc78a7af2ab63bd4368665ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>numphp\matrix::asin</definition>
        <argsstring>()</argsstring>
        <name>asin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="1486" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="1486" bodyend="1488"/>
      </memberdef>
      <memberdef kind="function" id="classnumphp_1_1matrix_1a96ee78e47c40df5974e779987b1e5d85" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>numphp\matrix::cos</definition>
        <argsstring>()</argsstring>
        <name>cos</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="1490" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="1490" bodyend="1492"/>
      </memberdef>
      <memberdef kind="function" id="classnumphp_1_1matrix_1a38f90cb0a4c28a43309c0cf1c2ee49e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>numphp\matrix::acos</definition>
        <argsstring>()</argsstring>
        <name>acos</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="1494" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="1494" bodyend="1496"/>
      </memberdef>
      <memberdef kind="function" id="classnumphp_1_1matrix_1a8309690c00a123b75bdbdfd318f29133" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>numphp\matrix::tan</definition>
        <argsstring>()</argsstring>
        <name>tan</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="1498" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="1498" bodyend="1500"/>
      </memberdef>
      <memberdef kind="function" id="classnumphp_1_1matrix_1a8d50c70135604d3ef4e82d10602bc621" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>numphp\matrix::atan</definition>
        <argsstring>()</argsstring>
        <name>atan</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="1502" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="1502" bodyend="1504"/>
      </memberdef>
      <memberdef kind="function" id="classnumphp_1_1matrix_1ae575004f6a5d83f323126245f9bbd763" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>numphp\matrix::radToDeg</definition>
        <argsstring>()</argsstring>
        <name>radToDeg</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="1506" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="1506" bodyend="1508"/>
      </memberdef>
      <memberdef kind="function" id="classnumphp_1_1matrix_1a608c82d1c589a51167de7993c66bb779" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>numphp\matrix::degToRad</definition>
        <argsstring>()</argsstring>
        <name>degToRad</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="1510" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="1510" bodyend="1512"/>
      </memberdef>
      <memberdef kind="function" id="classnumphp_1_1matrix_1a8582a5cfaeef021f1bfe8f2bcb88f410" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>numphp\matrix::floor</definition>
        <argsstring>()</argsstring>
        <name>floor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="1514" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="1514" bodyend="1516"/>
      </memberdef>
      <memberdef kind="function" id="classnumphp_1_1matrix_1a4feb4f7a1c87239f40048c79679b3d62" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>numphp\matrix::ceil</definition>
        <argsstring>()</argsstring>
        <name>ceil</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="1518" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="1518" bodyend="1520"/>
      </memberdef>
      <memberdef kind="function" id="classnumphp_1_1matrix_1a5c2e2af9dc6c4720d1669bbcf00211d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>numphp\matrix::clip</definition>
        <argsstring>(float $min, float $max)</argsstring>
        <name>clip</name>
        <param>
          <type>float</type>
          <declname>$min</declname>
        </param>
        <param>
          <type>float</type>
          <declname>$max</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="1522" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="1522" bodyend="1538"/>
      </memberdef>
      <memberdef kind="function" id="classnumphp_1_1matrix_1a0ef31cbe42cc81c3a917770ce45fe867" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>numphp\matrix::square</definition>
        <argsstring>()</argsstring>
        <name>square</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="1540" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="1540" bodyend="1542"/>
      </memberdef>
      <memberdef kind="function" id="classnumphp_1_1matrix_1a43b67d8e41f7b3727cb917d70dcd9c55" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>numphp\matrix::equal</definition>
        <argsstring>(int|float|matrix $m)</argsstring>
        <name>equal</name>
        <param>
          <type>int|float|<ref refid="classnumphp_1_1matrix" kindref="compound">matrix</ref></type>
          <declname>$m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametertype>int</parametertype>
<parametertype>float</parametertype>
<parametertype>matrix</parametertype>
<parametername>$m</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>matrix </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="1549" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="1549" bodyend="1568"/>
      </memberdef>
      <memberdef kind="function" id="classnumphp_1_1matrix_1aba447f6a3d3a30d5365af4caf9200046" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>numphp\matrix::greater</definition>
        <argsstring>(int|float|matrix $m)</argsstring>
        <name>greater</name>
        <param>
          <type>int|float|<ref refid="classnumphp_1_1matrix" kindref="compound">matrix</ref></type>
          <declname>$m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametertype>int</parametertype>
<parametertype>float</parametertype>
<parametertype>matrix</parametertype>
<parametername>$m</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>matrix </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="1575" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="1575" bodyend="1594"/>
      </memberdef>
      <memberdef kind="function" id="classnumphp_1_1matrix_1a438025d95e13edb3776213585f116b6e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>numphp\matrix::less</definition>
        <argsstring>(int|float|matrix $m)</argsstring>
        <name>less</name>
        <param>
          <type>int|float|<ref refid="classnumphp_1_1matrix" kindref="compound">matrix</ref></type>
          <declname>$m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametertype>int</parametertype>
<parametertype>float</parametertype>
<parametertype>matrix</parametertype>
<parametername>$m</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>matrix </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="1601" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="1601" bodyend="1620"/>
      </memberdef>
      <memberdef kind="function" id="classnumphp_1_1matrix_1aff5ca959fa78fc288c27585fb6e92ece" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>numphp\matrix::isSymmetric</definition>
        <argsstring>()</argsstring>
        <name>isSymmetric</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Is the matrix symmetric i.e. is it equal to its own transpose?</para><para><simplesect kind="return"><para>bool </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="1627" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="1627" bodyend="1642"/>
      </memberdef>
      <memberdef kind="function" id="classnumphp_1_1matrix_1a5121ef85c8187f58082c467b9187b4e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>numphp\matrix::flatten</definition>
        <argsstring>()</argsstring>
        <name>flatten</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Flatten i.e unravel the matrix into a vector.</para><para><simplesect kind="return"><para></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="1649" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="1649" bodyend="1657"/>
      </memberdef>
      <memberdef kind="function" id="classnumphp_1_1matrix_1a700c2e6ecd995fecf7f8e0bd732e4f4b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>numphp\matrix::printMatrix</definition>
        <argsstring>()</argsstring>
        <name>printMatrix</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>print the matrix in consol </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="1662" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="1662" bodyend="1670"/>
      </memberdef>
      <memberdef kind="function" id="classnumphp_1_1matrix_1a1f8cf056974d87b202ecdfdc60cc6610" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>numphp\matrix::__toString</definition>
        <argsstring>()</argsstring>
        <name>__toString</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="1672" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="1672" bodyend="1674"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classnumphp_1_1matrix_1af94a6f610e45fea13024491540dfee01" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>numphp\matrix::dotMatrix</definition>
        <argsstring>(\numphp\matrix $matrix)</argsstring>
        <name>dotMatrix</name>
        <param>
          <type>\<ref refid="classnumphp_1_1matrix" kindref="compound">numphp\matrix</ref></type>
          <declname>$matrix</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>get matrix &amp; matrix dot product <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametertype>\numphp\matrix</parametertype>
<parametername>$matrix</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="375" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="375" bodyend="386"/>
      </memberdef>
      <memberdef kind="function" id="classnumphp_1_1matrix_1ab7890b21a384b745491f0bcdf03341a9" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>numphp\matrix::dotVector</definition>
        <argsstring>(\numphp\vector $vector)</argsstring>
        <name>dotVector</name>
        <param>
          <type>\<ref refid="classnumphp_1_1vector" kindref="compound">numphp\vector</ref></type>
          <declname>$vector</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>get dot product of matrix &amp; a vector <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametertype>\numphp\vector</parametertype>
<parametername>$vector</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="393" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="393" bodyend="409"/>
      </memberdef>
      <memberdef kind="function" id="classnumphp_1_1matrix_1a696b9cefd2975aaf1700d9c41ea02ee9" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>numphp\matrix::multiplyVector</definition>
        <argsstring>(\numphp\vector $v)</argsstring>
        <name>multiplyVector</name>
        <param>
          <type>\<ref refid="classnumphp_1_1vector" kindref="compound">numphp\vector</ref></type>
          <declname>$v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametertype>\numphp\vector</parametertype>
<parametername>$v</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>matrix </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="434" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="434" bodyend="444"/>
      </memberdef>
      <memberdef kind="function" id="classnumphp_1_1matrix_1a56392573148e9ef617e0cc56d81843ef" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>numphp\matrix::multiplyMatrix</definition>
        <argsstring>(\numphp\matrix $m)</argsstring>
        <name>multiplyMatrix</name>
        <param>
          <type>\<ref refid="classnumphp_1_1matrix" kindref="compound">numphp\matrix</ref></type>
          <declname>$m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametertype>\numphp\matrix</parametertype>
<parametername>$m</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>matrix </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="451" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="451" bodyend="462"/>
      </memberdef>
      <memberdef kind="function" id="classnumphp_1_1matrix_1ac68e26a71a2dd0e8f4d260a8b56816d6" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>numphp\matrix::multiplyScalar</definition>
        <argsstring>(int|float $scalar)</argsstring>
        <name>multiplyScalar</name>
        <param>
          <type>int|float</type>
          <declname>$scalar</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametertype>int</parametertype>
<parametertype>float</parametertype>
<parametername>$scalar</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>matrix </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="469" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="469" bodyend="486"/>
      </memberdef>
      <memberdef kind="function" id="classnumphp_1_1matrix_1a7b13c4dbf2e5a4b210167695240fbdbe" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>numphp\matrix::sumScalar</definition>
        <argsstring>(int|float $s)</argsstring>
        <name>sumScalar</name>
        <param>
          <type>int|float</type>
          <declname>$s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="504" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="504" bodyend="512"/>
      </memberdef>
      <memberdef kind="function" id="classnumphp_1_1matrix_1a2e495beaedce95dbfde9613ba03b7a7c" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>numphp\matrix::sumMatrix</definition>
        <argsstring>(\numphp\matrix $m)</argsstring>
        <name>sumMatrix</name>
        <param>
          <type>\<ref refid="classnumphp_1_1matrix" kindref="compound">numphp\matrix</ref></type>
          <declname>$m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="514" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="514" bodyend="524"/>
      </memberdef>
      <memberdef kind="function" id="classnumphp_1_1matrix_1a3eb6781a090e6995479de46ae43d172e" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>numphp\matrix::sumVector</definition>
        <argsstring>(\numphp\vector $v)</argsstring>
        <name>sumVector</name>
        <param>
          <type>\<ref refid="classnumphp_1_1vector" kindref="compound">numphp\vector</ref></type>
          <declname>$v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="526" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="526" bodyend="536"/>
      </memberdef>
      <memberdef kind="function" id="classnumphp_1_1matrix_1a9a50fc753650107127feb5a29d2cde3a" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>numphp\matrix::subtractScalar</definition>
        <argsstring>(int|float $s)</argsstring>
        <name>subtractScalar</name>
        <param>
          <type>int|float</type>
          <declname>$s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="553" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="553" bodyend="561"/>
      </memberdef>
      <memberdef kind="function" id="classnumphp_1_1matrix_1a5f358545f2c7b3176d0ad9a67c4d4c7a" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>numphp\matrix::subtractMatrix</definition>
        <argsstring>(\numphp\matrix $m)</argsstring>
        <name>subtractMatrix</name>
        <param>
          <type>\<ref refid="classnumphp_1_1matrix" kindref="compound">numphp\matrix</ref></type>
          <declname>$m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="563" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="563" bodyend="573"/>
      </memberdef>
      <memberdef kind="function" id="classnumphp_1_1matrix_1a83cb197c168485f52d42cfd9a7b594e4" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>numphp\matrix::subtractVector</definition>
        <argsstring>(\numphp\vector $v)</argsstring>
        <name>subtractVector</name>
        <param>
          <type>\<ref refid="classnumphp_1_1vector" kindref="compound">numphp\vector</ref></type>
          <declname>$v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="575" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="575" bodyend="585"/>
      </memberdef>
      <memberdef kind="function" id="classnumphp_1_1matrix_1a8a208ef1c8e79ccdf0e754e1babb0f81" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>numphp\matrix::divideMatrix</definition>
        <argsstring>(\numphp\matrix $m)</argsstring>
        <name>divideMatrix</name>
        <param>
          <type>\<ref refid="classnumphp_1_1matrix" kindref="compound">numphp\matrix</ref></type>
          <declname>$m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="602" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="602" bodyend="614"/>
      </memberdef>
      <memberdef kind="function" id="classnumphp_1_1matrix_1a22489abf30f99c0ad587e845d6827a38" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>numphp\matrix::divideVector</definition>
        <argsstring>(\numphp\vector $v)</argsstring>
        <name>divideVector</name>
        <param>
          <type>\<ref refid="classnumphp_1_1vector" kindref="compound">numphp\vector</ref></type>
          <declname>$v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="616" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="616" bodyend="628"/>
      </memberdef>
      <memberdef kind="function" id="classnumphp_1_1matrix_1ad83c6198d21f13d3ac9320aa755e753a" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>numphp\matrix::divideScalar</definition>
        <argsstring>(int|float $s)</argsstring>
        <name>divideScalar</name>
        <param>
          <type>int|float</type>
          <declname>$s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="630" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="630" bodyend="638"/>
      </memberdef>
      <memberdef kind="function" id="classnumphp_1_1matrix_1ae5200f69973f4e32d67cee0714c5484b" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>numphp\matrix::powMatrix</definition>
        <argsstring>(\numphp\matrix $m)</argsstring>
        <name>powMatrix</name>
        <param>
          <type>\<ref refid="classnumphp_1_1matrix" kindref="compound">numphp\matrix</ref></type>
          <declname>$m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="657" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="657" bodyend="667"/>
      </memberdef>
      <memberdef kind="function" id="classnumphp_1_1matrix_1ae4a0a3bf7518bf1a891f9497223509fb" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>numphp\matrix::powVector</definition>
        <argsstring>(\numphp\vector $v)</argsstring>
        <name>powVector</name>
        <param>
          <type>\<ref refid="classnumphp_1_1vector" kindref="compound">numphp\vector</ref></type>
          <declname>$v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="669" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="669" bodyend="679"/>
      </memberdef>
      <memberdef kind="function" id="classnumphp_1_1matrix_1a0d3cecda2f5cee3f3e9f0bb54e99f02b" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>numphp\matrix::powScalar</definition>
        <argsstring>(int|float $s)</argsstring>
        <name>powScalar</name>
        <param>
          <type>int|float</type>
          <declname>$s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="681" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="681" bodyend="689"/>
      </memberdef>
      <memberdef kind="function" id="classnumphp_1_1matrix_1a1676857ff799c9d668cfed5efd49308b" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>numphp\matrix::modMatrix</definition>
        <argsstring>(\numphp\matrix $m)</argsstring>
        <name>modMatrix</name>
        <param>
          <type>\<ref refid="classnumphp_1_1matrix" kindref="compound">numphp\matrix</ref></type>
          <declname>$m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="710" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="710" bodyend="722"/>
      </memberdef>
      <memberdef kind="function" id="classnumphp_1_1matrix_1a1a2edfaca9f706ef2478eb9f964741aa" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>numphp\matrix::modVector</definition>
        <argsstring>(\numphp\vector $v)</argsstring>
        <name>modVector</name>
        <param>
          <type>\<ref refid="classnumphp_1_1vector" kindref="compound">numphp\vector</ref></type>
          <declname>$v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="724" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="724" bodyend="734"/>
      </memberdef>
      <memberdef kind="function" id="classnumphp_1_1matrix_1afcc80eb8fa0f1ad389d6802e1d9e85d6" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>numphp\matrix::modScalar</definition>
        <argsstring>(int|float $s)</argsstring>
        <name>modScalar</name>
        <param>
          <type>int|float</type>
          <declname>$s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="736" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="736" bodyend="744"/>
      </memberdef>
      <memberdef kind="function" id="classnumphp_1_1matrix_1ace9e2ed06db61009f0cad996f9341d42" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>numphp\matrix::checkShape</definition>
        <argsstring>(\numphp\matrix $matrix)</argsstring>
        <name>checkShape</name>
        <param>
          <type>\<ref refid="classnumphp_1_1matrix" kindref="compound">numphp\matrix</ref></type>
          <declname>$matrix</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="1676" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="1676" bodyend="1681"/>
      </memberdef>
      <memberdef kind="function" id="classnumphp_1_1matrix_1ab3780c6c12b1571202d8be68ade1da70" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>numphp\matrix::checkDimensions</definition>
        <argsstring>(\numphp\matrix $matrix)</argsstring>
        <name>checkDimensions</name>
        <param>
          <type>\<ref refid="classnumphp_1_1matrix" kindref="compound">numphp\matrix</ref></type>
          <declname>$matrix</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="1683" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="1683" bodyend="1688"/>
      </memberdef>
      <memberdef kind="function" id="classnumphp_1_1matrix_1a9463e6cc7fb8e70ae0eb76b85a08abe5" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>numphp\matrix::checkDtype</definition>
        <argsstring>(\numphp\matrix $matrix)</argsstring>
        <name>checkDtype</name>
        <param>
          <type>\<ref refid="classnumphp_1_1matrix" kindref="compound">numphp\matrix</ref></type>
          <declname>$matrix</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="1690" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="1690" bodyend="1695"/>
      </memberdef>
      <memberdef kind="function" id="classnumphp_1_1matrix_1ab72c4131f8d0a2f4346735736451264e" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>numphp\matrix::__construct</definition>
        <argsstring>(int $row, int $col, int $dtype=self::Float)</argsstring>
        <name>__construct</name>
        <param>
          <type>int</type>
          <declname>$row</declname>
        </param>
        <param>
          <type>int</type>
          <declname>$col</declname>
        </param>
        <param>
          <type>int</type>
          <declname>$dtype</declname>
          <defval>self::Float</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="1709" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="1709" bodyend="1731"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-static-func">
      <memberdef kind="function" id="classnumphp_1_1matrix_1a93994345db849fd4ff6d65cda9733101" prot="protected" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>static</type>
        <definition>static numphp\matrix::c_FloatMatrix</definition>
        <argsstring>(int $row, int $col)</argsstring>
        <name>c_FloatMatrix</name>
        <param>
          <type>int</type>
          <declname>$row</declname>
        </param>
        <param>
          <type>int</type>
          <declname>$col</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="1697" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="1697" bodyend="1699"/>
      </memberdef>
      <memberdef kind="function" id="classnumphp_1_1matrix_1a8f3c9922124a8d07fa0dac32a014f947" prot="protected" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>static</type>
        <definition>static numphp\matrix::c_DoubleMatrix</definition>
        <argsstring>(int $row, int $col)</argsstring>
        <name>c_DoubleMatrix</name>
        <param>
          <type>int</type>
          <declname>$row</declname>
        </param>
        <param>
          <type>int</type>
          <declname>$col</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="1701" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="1701" bodyend="1703"/>
      </memberdef>
      <memberdef kind="function" id="classnumphp_1_1matrix_1af7e5a73870feb85048a26def93ebd039" prot="protected" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>static</type>
        <definition>static numphp\matrix::c_IntMatrix</definition>
        <argsstring>(int $row, int $col)</argsstring>
        <name>c_IntMatrix</name>
        <param>
          <type>int</type>
          <declname>$row</declname>
        </param>
        <param>
          <type>int</type>
          <declname>$col</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="1705" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="1705" bodyend="1707"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classnumphp_1_1matrix_1aa22a88885fcd78520ec79441f5f3b62d" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>static</type>
        <definition>static numphp\matrix::_err</definition>
        <argsstring>($msg)</argsstring>
        <name>_err</name>
        <param>
          <declname>$msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="1733" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="1733" bodyend="1735"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classnumphp_1_1matrix_1a92b6f0f89829046f195d3550e11898e8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>numphp\matrix::_invalidArgument</definition>
        <argsstring>($argument)</argsstring>
        <name>_invalidArgument</name>
        <param>
          <declname>$argument</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="1737" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="1737" bodyend="1739"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/ghost/projects/git/numphp/src/matrix.php" line="16" column="1" bodyfile="/home/ghost/projects/git/numphp/src/matrix.php" bodystart="16" bodyend="1765"/>
    <listofallmembers>
      <member refid="classnumphp_1_1matrix_1ad1e221d724f630b3439eca1e5abe338e" prot="public" virt="non-virtual"><scope>numphp::matrix</scope><name>$_mem</name></member>
      <member refid="classnumphp_1_1matrix_1af32e3918ee2965b5473e678b3029ef7e" prot="public" virt="non-virtual"><scope>numphp::matrix</scope><name>$_time</name></member>
      <member refid="classnumphp_1_1matrix_1a29fc1e641a999ee0fa3108a2e685d88b" prot="public" virt="non-virtual"><scope>numphp::matrix</scope><name>$col</name></member>
      <member refid="classnumphp_1_1matrix_1ab1ef5ccc7bfb065d887ac0702a9eb944" prot="public" virt="non-virtual"><scope>numphp::matrix</scope><name>$data</name></member>
      <member refid="classnumphp_1_1matrix_1a249087dc5317c6a09b644edf92c4f950" prot="public" virt="non-virtual"><scope>numphp::matrix</scope><name>$dtype</name></member>
      <member refid="classnumphp_1_1matrix_1a895de4a7bec63f4c9616ef4c13b930e1" prot="public" virt="non-virtual"><scope>numphp::matrix</scope><name>$row</name></member>
      <member refid="classnumphp_1_1matrix_1ab72c4131f8d0a2f4346735736451264e" prot="protected" virt="non-virtual"><scope>numphp::matrix</scope><name>__construct</name></member>
      <member refid="classnumphp_1_1matrix_1a1f8cf056974d87b202ecdfdc60cc6610" prot="public" virt="non-virtual"><scope>numphp::matrix</scope><name>__toString</name></member>
      <member refid="classnumphp_1_1matrix_1aa22a88885fcd78520ec79441f5f3b62d" prot="private" virt="non-virtual"><scope>numphp::matrix</scope><name>_err</name></member>
      <member refid="classnumphp_1_1matrix_1a92b6f0f89829046f195d3550e11898e8" prot="private" virt="non-virtual"><scope>numphp::matrix</scope><name>_invalidArgument</name></member>
      <member refid="classnumphp_1_1matrix_1acbec4a9a79ebcb80dd41f51c37697f3b" prot="public" virt="non-virtual"><scope>numphp::matrix</scope><name>abs</name></member>
      <member refid="classnumphp_1_1matrix_1a38f90cb0a4c28a43309c0cf1c2ee49e9" prot="public" virt="non-virtual"><scope>numphp::matrix</scope><name>acos</name></member>
      <member refid="classnumphp_1_1matrix_1a918f392341d9e3f5519740ad8f883f7e" prot="public" virt="non-virtual"><scope>numphp::matrix</scope><name>addScaleRow</name></member>
      <member refid="classnumphp_1_1matrix_1a29f530c55fee1a02cbb96dc0b7833ecb" prot="public" virt="non-virtual"><scope>numphp::matrix</scope><name>ar</name></member>
      <member refid="classnumphp_1_1matrix_1aa73193cd6c94bcc271823a439f370449" prot="public" virt="non-virtual"><scope>numphp::matrix</scope><name>argMax</name></member>
      <member refid="classnumphp_1_1matrix_1a653af247c0a0b922c260c194340875e7" prot="public" virt="non-virtual"><scope>numphp::matrix</scope><name>argMin</name></member>
      <member refid="classnumphp_1_1matrix_1a0305139b6278496b006c3fde8be692bf" prot="public" virt="non-virtual"><scope>numphp::matrix</scope><name>asArray</name></member>
      <member refid="classnumphp_1_1matrix_1a617086ccfc78a7af2ab63bd4368665ad" prot="public" virt="non-virtual"><scope>numphp::matrix</scope><name>asin</name></member>
      <member refid="classnumphp_1_1matrix_1a8d50c70135604d3ef4e82d10602bc621" prot="public" virt="non-virtual"><scope>numphp::matrix</scope><name>atan</name></member>
      <member refid="classnumphp_1_1matrix_1a8f3c9922124a8d07fa0dac32a014f947" prot="protected" virt="non-virtual"><scope>numphp::matrix</scope><name>c_DoubleMatrix</name></member>
      <member refid="classnumphp_1_1matrix_1a93994345db849fd4ff6d65cda9733101" prot="protected" virt="non-virtual"><scope>numphp::matrix</scope><name>c_FloatMatrix</name></member>
      <member refid="classnumphp_1_1matrix_1af7e5a73870feb85048a26def93ebd039" prot="protected" virt="non-virtual"><scope>numphp::matrix</scope><name>c_IntMatrix</name></member>
      <member refid="classnumphp_1_1matrix_1a4feb4f7a1c87239f40048c79679b3d62" prot="public" virt="non-virtual"><scope>numphp::matrix</scope><name>ceil</name></member>
      <member refid="classnumphp_1_1matrix_1ab3780c6c12b1571202d8be68ade1da70" prot="protected" virt="non-virtual"><scope>numphp::matrix</scope><name>checkDimensions</name></member>
      <member refid="classnumphp_1_1matrix_1a9463e6cc7fb8e70ae0eb76b85a08abe5" prot="protected" virt="non-virtual"><scope>numphp::matrix</scope><name>checkDtype</name></member>
      <member refid="classnumphp_1_1matrix_1ace9e2ed06db61009f0cad996f9341d42" prot="protected" virt="non-virtual"><scope>numphp::matrix</scope><name>checkShape</name></member>
      <member refid="classnumphp_1_1matrix_1a53b1445728b4e7cbba20c12760285449" prot="public" virt="non-virtual"><scope>numphp::matrix</scope><name>cholesky</name></member>
      <member refid="classnumphp_1_1matrix_1a5c2e2af9dc6c4720d1669bbcf00211d4" prot="public" virt="non-virtual"><scope>numphp::matrix</scope><name>clip</name></member>
      <member refid="classnumphp_1_1matrix_1a9ab091c4ae375ce684abe2e4d76054c8" prot="public" virt="non-virtual"><scope>numphp::matrix</scope><name>colAsVector</name></member>
      <member refid="classnumphp_1_1matrix_1a048b5a0215d2732644b1567b0e6ddbb4" prot="public" virt="non-virtual"><scope>numphp::matrix</scope><name>convolve</name></member>
      <member refid="classnumphp_1_1matrix_1a4fc4e2887cf626e224219d96fb0f9d71" prot="public" virt="non-virtual"><scope>numphp::matrix</scope><name>copyMatrix</name></member>
      <member refid="classnumphp_1_1matrix_1a96ee78e47c40df5974e779987b1e5d85" prot="public" virt="non-virtual"><scope>numphp::matrix</scope><name>cos</name></member>
      <member refid="classnumphp_1_1matrix_1a608c82d1c589a51167de7993c66bb779" prot="public" virt="non-virtual"><scope>numphp::matrix</scope><name>degToRad</name></member>
      <member refid="classnumphp_1_1matrix_1ad867ea81e0bb5064613b745c612d8d6e" prot="public" virt="non-virtual"><scope>numphp::matrix</scope><name>det</name></member>
      <member refid="classnumphp_1_1matrix_1a3bc04d3e50be7deb74b879495a4559ba" prot="public" virt="non-virtual"><scope>numphp::matrix</scope><name>diagonal</name></member>
      <member refid="classnumphp_1_1matrix_1a988fa6917dbc232ff76b8651dadc2e89" prot="public" virt="non-virtual"><scope>numphp::matrix</scope><name>diagonalAsVector</name></member>
      <member refid="classnumphp_1_1matrix_1adbae489080ca7ad5b83b00f17ab1b5e6" prot="public" virt="non-virtual"><scope>numphp::matrix</scope><name>dignoalInterChange</name></member>
      <member refid="classnumphp_1_1matrix_1af35a9278b0caa6375867d675a9c4f3df" prot="public" virt="non-virtual"><scope>numphp::matrix</scope><name>diminish_left</name></member>
      <member refid="classnumphp_1_1matrix_1a1038de7308d939d14d8763e1edcce5f2" prot="public" virt="non-virtual"><scope>numphp::matrix</scope><name>diminish_right</name></member>
      <member refid="classnumphp_1_1matrix_1a2508f1a86f390d0865cb4486bb3bfe7c" prot="public" virt="non-virtual"><scope>numphp::matrix</scope><name>divide</name></member>
      <member refid="classnumphp_1_1matrix_1a8a208ef1c8e79ccdf0e754e1babb0f81" prot="protected" virt="non-virtual"><scope>numphp::matrix</scope><name>divideMatrix</name></member>
      <member refid="classnumphp_1_1matrix_1ad83c6198d21f13d3ac9320aa755e753a" prot="protected" virt="non-virtual"><scope>numphp::matrix</scope><name>divideScalar</name></member>
      <member refid="classnumphp_1_1matrix_1a22489abf30f99c0ad587e845d6827a38" prot="protected" virt="non-virtual"><scope>numphp::matrix</scope><name>divideVector</name></member>
      <member refid="classnumphp_1_1matrix_1a358f05bd0af0321c62785b79f1e6a147" prot="public" virt="non-virtual"><scope>numphp::matrix</scope><name>dot</name></member>
      <member refid="classnumphp_1_1matrix_1af94a6f610e45fea13024491540dfee01" prot="protected" virt="non-virtual"><scope>numphp::matrix</scope><name>dotMatrix</name></member>
      <member refid="classnumphp_1_1matrix_1ab7890b21a384b745491f0bcdf03341a9" prot="protected" virt="non-virtual"><scope>numphp::matrix</scope><name>dotVector</name></member>
      <member refid="classnumphp_1_1matrix_1a37c959147dd0f83ab064309d9696552a" prot="public" virt="non-virtual"><scope>numphp::matrix</scope><name>DOUBLE</name></member>
      <member refid="classnumphp_1_1matrix_1a278c7d7686f14e8bc636ee6ac23fb3f1" prot="public" virt="non-virtual"><scope>numphp::matrix</scope><name>eign</name></member>
      <member refid="classnumphp_1_1matrix_1ab0934e9a4e8834c6d2147afe22a668e1" prot="public" virt="non-virtual"><scope>numphp::matrix</scope><name>EPSILON</name></member>
      <member refid="classnumphp_1_1matrix_1a43b67d8e41f7b3727cb917d70dcd9c55" prot="public" virt="non-virtual"><scope>numphp::matrix</scope><name>equal</name></member>
      <member refid="classnumphp_1_1matrix_1a58f7978b9ae62d6cfb071446989a3f27" prot="public" virt="non-virtual"><scope>numphp::matrix</scope><name>exp</name></member>
      <member refid="classnumphp_1_1matrix_1a323550cd5b190ba253421405daf8ff00" prot="public" virt="non-virtual"><scope>numphp::matrix</scope><name>exp1</name></member>
      <member refid="classnumphp_1_1matrix_1a50b2751e5f4666ac2aa5b60c3e32c70e" prot="public" virt="non-virtual"><scope>numphp::matrix</scope><name>factory</name></member>
      <member refid="classnumphp_1_1matrix_1a5121ef85c8187f58082c467b9187b4e2" prot="public" virt="non-virtual"><scope>numphp::matrix</scope><name>flatten</name></member>
      <member refid="classnumphp_1_1matrix_1a7ee6df1a775da9d64a1ea57a7bdd0873" prot="public" virt="non-virtual"><scope>numphp::matrix</scope><name>FLOAT</name></member>
      <member refid="classnumphp_1_1matrix_1a8582a5cfaeef021f1bfe8f2bcb88f410" prot="public" virt="non-virtual"><scope>numphp::matrix</scope><name>floor</name></member>
      <member refid="classnumphp_1_1matrix_1ac647da171a7f8c1735f2e3f92de6e8cc" prot="public" virt="non-virtual"><scope>numphp::matrix</scope><name>full</name></member>
      <member refid="classnumphp_1_1matrix_1a93c6eef6b6ddcc68f124c1b2246a267f" prot="public" virt="non-virtual"><scope>numphp::matrix</scope><name>gaussian</name></member>
      <member refid="classnumphp_1_1matrix_1a97dc366d2fd9ae8af0b4137ce6ff7883" prot="public" virt="non-virtual"><scope>numphp::matrix</scope><name>getDiagonalVal</name></member>
      <member refid="classnumphp_1_1matrix_1a2277a2e7616a450cc77c2804c7a69d89" prot="public" virt="non-virtual"><scope>numphp::matrix</scope><name>getDtype</name></member>
      <member refid="classnumphp_1_1matrix_1a44648bdf7eedb6f4d71a85a71e4d8a2b" prot="public" virt="non-virtual"><scope>numphp::matrix</scope><name>getMemory</name></member>
      <member refid="classnumphp_1_1matrix_1a581fd4bd988d23b7fdf08d9018a7c0cb" prot="public" virt="non-virtual"><scope>numphp::matrix</scope><name>getShape</name></member>
      <member refid="classnumphp_1_1matrix_1a0593a040ae5fe8f8f501483973366f90" prot="public" virt="non-virtual"><scope>numphp::matrix</scope><name>getSize</name></member>
      <member refid="classnumphp_1_1matrix_1aba447f6a3d3a30d5365af4caf9200046" prot="public" virt="non-virtual"><scope>numphp::matrix</scope><name>greater</name></member>
      <member refid="classnumphp_1_1matrix_1a07b8e6f7ae5e9e2e097f6b1e878ca841" prot="public" virt="non-virtual"><scope>numphp::matrix</scope><name>has_ZeroRow</name></member>
      <member refid="classnumphp_1_1matrix_1a10584e50c8e5909c9fd211fc752ca7b4" prot="public" virt="non-virtual"><scope>numphp::matrix</scope><name>identity</name></member>
      <member refid="classnumphp_1_1matrix_1ab92211b97c18654399b119697a4154b4" prot="public" virt="non-virtual"><scope>numphp::matrix</scope><name>INT</name></member>
      <member refid="classnumphp_1_1matrix_1ae8aa45df174ee992fa648739a4bdd373" prot="public" virt="non-virtual"><scope>numphp::matrix</scope><name>inverse</name></member>
      <member refid="classnumphp_1_1matrix_1ae7b1659dc8f5986fd6366cc8c9dca176" prot="public" virt="non-virtual"><scope>numphp::matrix</scope><name>is_rowZero</name></member>
      <member refid="classnumphp_1_1matrix_1a604df72809ae1cabb3cc6df9e5af19f1" prot="public" virt="non-virtual"><scope>numphp::matrix</scope><name>is_zero</name></member>
      <member refid="classnumphp_1_1matrix_1a6a2e6f219c474e7319d00bb40005b327" prot="public" virt="non-virtual"><scope>numphp::matrix</scope><name>isSquare</name></member>
      <member refid="classnumphp_1_1matrix_1aff5ca959fa78fc288c27585fb6e92ece" prot="public" virt="non-virtual"><scope>numphp::matrix</scope><name>isSymmetric</name></member>
      <member refid="classnumphp_1_1matrix_1aaaf45f5c0d311878adbf47fbbad0ad0d" prot="public" virt="non-virtual"><scope>numphp::matrix</scope><name>joinAbove</name></member>
      <member refid="classnumphp_1_1matrix_1a4a209222c48afa187404809b75bf1563" prot="public" virt="non-virtual"><scope>numphp::matrix</scope><name>joinBelow</name></member>
      <member refid="classnumphp_1_1matrix_1a2500ad164734cc2c5d5dec8ddaa7f00a" prot="public" virt="non-virtual"><scope>numphp::matrix</scope><name>joinLeft</name></member>
      <member refid="classnumphp_1_1matrix_1a30b0daedefb110a3fa396ae586c36266" prot="public" virt="non-virtual"><scope>numphp::matrix</scope><name>joinRight</name></member>
      <member refid="classnumphp_1_1matrix_1a438025d95e13edb3776213585f116b6e" prot="public" virt="non-virtual"><scope>numphp::matrix</scope><name>less</name></member>
      <member refid="classnumphp_1_1matrix_1ac4dc1004a05d42abd8df91ce3f6bf4e7" prot="public" virt="non-virtual"><scope>numphp::matrix</scope><name>log</name></member>
      <member refid="classnumphp_1_1matrix_1a28d2723d3a12f11d23f1c5d1da5a7ba5" prot="public" virt="non-virtual"><scope>numphp::matrix</scope><name>log1p</name></member>
      <member refid="classnumphp_1_1matrix_1a1d8d4268c1522c012bef00b60a027866" prot="public" virt="non-virtual"><scope>numphp::matrix</scope><name>lu</name></member>
      <member refid="classnumphp_1_1matrix_1a8425719f5bff5d09db0a266a3f407082" prot="public" virt="non-virtual"><scope>numphp::matrix</scope><name>map</name></member>
      <member refid="classnumphp_1_1matrix_1a0c576ab7431bca5317b97cbe1911024e" prot="public" virt="non-virtual"><scope>numphp::matrix</scope><name>maximum</name></member>
      <member refid="classnumphp_1_1matrix_1a28aeeed8d11d34face405f68a215eb49" prot="public" virt="non-virtual"><scope>numphp::matrix</scope><name>minimum</name></member>
      <member refid="classnumphp_1_1matrix_1ae824e45a04d31e8f437032585a836007" prot="public" virt="non-virtual"><scope>numphp::matrix</scope><name>mod</name></member>
      <member refid="classnumphp_1_1matrix_1a1676857ff799c9d668cfed5efd49308b" prot="protected" virt="non-virtual"><scope>numphp::matrix</scope><name>modMatrix</name></member>
      <member refid="classnumphp_1_1matrix_1afcc80eb8fa0f1ad389d6802e1d9e85d6" prot="protected" virt="non-virtual"><scope>numphp::matrix</scope><name>modScalar</name></member>
      <member refid="classnumphp_1_1matrix_1a1a2edfaca9f706ef2478eb9f964741aa" prot="protected" virt="non-virtual"><scope>numphp::matrix</scope><name>modVector</name></member>
      <member refid="classnumphp_1_1matrix_1a3001b47f83eb8cfe7265bb20f2eba439" prot="public" virt="non-virtual"><scope>numphp::matrix</scope><name>multiply</name></member>
      <member refid="classnumphp_1_1matrix_1a56392573148e9ef617e0cc56d81843ef" prot="protected" virt="non-virtual"><scope>numphp::matrix</scope><name>multiplyMatrix</name></member>
      <member refid="classnumphp_1_1matrix_1ac68e26a71a2dd0e8f4d260a8b56816d6" prot="protected" virt="non-virtual"><scope>numphp::matrix</scope><name>multiplyScalar</name></member>
      <member refid="classnumphp_1_1matrix_1a696b9cefd2975aaf1700d9c41ea02ee9" prot="protected" virt="non-virtual"><scope>numphp::matrix</scope><name>multiplyVector</name></member>
      <member refid="classnumphp_1_1matrix_1ac28f97d08c1f719a5fb53972d6f915e3" prot="public" virt="non-virtual"><scope>numphp::matrix</scope><name>normFrob</name></member>
      <member refid="classnumphp_1_1matrix_1ac46dc732b2fbf9a04369d676e5a92af2" prot="public" virt="non-virtual"><scope>numphp::matrix</scope><name>normINF</name></member>
      <member refid="classnumphp_1_1matrix_1a59406f38b2d2c4157f769026d8123caf" prot="public" virt="non-virtual"><scope>numphp::matrix</scope><name>normL1</name></member>
      <member refid="classnumphp_1_1matrix_1a999c7b46196534be5ce12cc68a4fa9e2" prot="public" virt="non-virtual"><scope>numphp::matrix</scope><name>normL2</name></member>
      <member refid="classnumphp_1_1matrix_1a2a389c9077ca910be7c1c34d073f627f" prot="public" virt="non-virtual"><scope>numphp::matrix</scope><name>null</name></member>
      <member refid="classnumphp_1_1matrix_1addbcb2030bd68ed174c5c7b3ac48f88b" prot="public" virt="non-virtual"><scope>numphp::matrix</scope><name>ones</name></member>
      <member refid="classnumphp_1_1matrix_1a5d01e05f0264dd103c0056dfffad078f" prot="public" virt="non-virtual"><scope>numphp::matrix</scope><name>poisson</name></member>
      <member refid="classnumphp_1_1matrix_1a7fd3c0fdf32a2cc31b5ab1b4c9008b78" prot="public" virt="non-virtual"><scope>numphp::matrix</scope><name>pow</name></member>
      <member refid="classnumphp_1_1matrix_1ae5200f69973f4e32d67cee0714c5484b" prot="protected" virt="non-virtual"><scope>numphp::matrix</scope><name>powMatrix</name></member>
      <member refid="classnumphp_1_1matrix_1a0d3cecda2f5cee3f3e9f0bb54e99f02b" prot="protected" virt="non-virtual"><scope>numphp::matrix</scope><name>powScalar</name></member>
      <member refid="classnumphp_1_1matrix_1ae4a0a3bf7518bf1a891f9497223509fb" prot="protected" virt="non-virtual"><scope>numphp::matrix</scope><name>powVector</name></member>
      <member refid="classnumphp_1_1matrix_1a700c2e6ecd995fecf7f8e0bd732e4f4b" prot="public" virt="non-virtual"><scope>numphp::matrix</scope><name>printMatrix</name></member>
      <member refid="classnumphp_1_1matrix_1a72fc2577837ea9ee46fea1502dbb1792" prot="public" virt="non-virtual"><scope>numphp::matrix</scope><name>pseudoInverse</name></member>
      <member refid="classnumphp_1_1matrix_1ae575004f6a5d83f323126245f9bbd763" prot="public" virt="non-virtual"><scope>numphp::matrix</scope><name>radToDeg</name></member>
      <member refid="classnumphp_1_1matrix_1ab2f6658b71b2d82150ffd971d51973c0" prot="public" virt="non-virtual"><scope>numphp::matrix</scope><name>randn</name></member>
      <member refid="classnumphp_1_1matrix_1a97cb65c313feeaa9d8df44871c7bb050" prot="public" virt="non-virtual"><scope>numphp::matrix</scope><name>reciprocal</name></member>
      <member refid="classnumphp_1_1matrix_1afc5ab843c5a9932860e8903bcc6fcc49" prot="public" virt="non-virtual"><scope>numphp::matrix</scope><name>ref</name></member>
      <member refid="classnumphp_1_1matrix_1a6a4b6a6926347fa713e02f4621a9507b" prot="public" virt="non-virtual"><scope>numphp::matrix</scope><name>rowAsVector</name></member>
      <member refid="classnumphp_1_1matrix_1a1e1bffd85910ee5157630e296206b75c" prot="public" virt="non-virtual"><scope>numphp::matrix</scope><name>rref</name></member>
      <member refid="classnumphp_1_1matrix_1a999b44abbe4e29966f8e1e69c868a1f0" prot="public" virt="non-virtual"><scope>numphp::matrix</scope><name>scale</name></member>
      <member refid="classnumphp_1_1matrix_1a53e4f3c35da4f452b798c38d3ac1f061" prot="public" virt="non-virtual"><scope>numphp::matrix</scope><name>scaleRow</name></member>
      <member refid="classnumphp_1_1matrix_1a6309365977d7adcf5fd7279233c124e0" prot="public" virt="non-virtual"><scope>numphp::matrix</scope><name>setData</name></member>
      <member refid="classnumphp_1_1matrix_1a2f57b3d5814e124baf09cc5407b6aa9d" prot="public" virt="non-virtual"><scope>numphp::matrix</scope><name>sin</name></member>
      <member refid="classnumphp_1_1matrix_1a0a343891b99ae56d21109e8124a2b020" prot="public" virt="non-virtual"><scope>numphp::matrix</scope><name>sqrt</name></member>
      <member refid="classnumphp_1_1matrix_1a0ef31cbe42cc81c3a917770ce45fe867" prot="public" virt="non-virtual"><scope>numphp::matrix</scope><name>square</name></member>
      <member refid="classnumphp_1_1matrix_1aa796eccaf47da0d712f9198a04782433" prot="public" virt="non-virtual"><scope>numphp::matrix</scope><name>subtract</name></member>
      <member refid="classnumphp_1_1matrix_1a5f358545f2c7b3176d0ad9a67c4d4c7a" prot="protected" virt="non-virtual"><scope>numphp::matrix</scope><name>subtractMatrix</name></member>
      <member refid="classnumphp_1_1matrix_1a9a50fc753650107127feb5a29d2cde3a" prot="protected" virt="non-virtual"><scope>numphp::matrix</scope><name>subtractScalar</name></member>
      <member refid="classnumphp_1_1matrix_1a83cb197c168485f52d42cfd9a7b594e4" prot="protected" virt="non-virtual"><scope>numphp::matrix</scope><name>subtractVector</name></member>
      <member refid="classnumphp_1_1matrix_1a5c68dc1774579f5de371feeda552e9c2" prot="public" virt="non-virtual"><scope>numphp::matrix</scope><name>sum</name></member>
      <member refid="classnumphp_1_1matrix_1a2e495beaedce95dbfde9613ba03b7a7c" prot="protected" virt="non-virtual"><scope>numphp::matrix</scope><name>sumMatrix</name></member>
      <member refid="classnumphp_1_1matrix_1a7b13c4dbf2e5a4b210167695240fbdbe" prot="protected" virt="non-virtual"><scope>numphp::matrix</scope><name>sumScalar</name></member>
      <member refid="classnumphp_1_1matrix_1a3eb6781a090e6995479de46ae43d172e" prot="protected" virt="non-virtual"><scope>numphp::matrix</scope><name>sumVector</name></member>
      <member refid="classnumphp_1_1matrix_1a5ef21a96407d69a3c06eafb71180af65" prot="public" virt="non-virtual"><scope>numphp::matrix</scope><name>svd</name></member>
      <member refid="classnumphp_1_1matrix_1ada47d06558e64477329d32c7cdd11ae1" prot="public" virt="non-virtual"><scope>numphp::matrix</scope><name>swapCols</name></member>
      <member refid="classnumphp_1_1matrix_1a9b7af4928ed123ab0eba000a7bc42230" prot="public" virt="non-virtual"><scope>numphp::matrix</scope><name>swapRows</name></member>
      <member refid="classnumphp_1_1matrix_1a72ab5dccd5e6e904929c0c10f79692c5" prot="public" virt="non-virtual"><scope>numphp::matrix</scope><name>swapValue</name></member>
      <member refid="classnumphp_1_1matrix_1a8309690c00a123b75bdbdfd318f29133" prot="public" virt="non-virtual"><scope>numphp::matrix</scope><name>tan</name></member>
      <member refid="classnumphp_1_1matrix_1ac5d4ea1cc38a4536b133f8aa43e99178" prot="public" virt="non-virtual"><scope>numphp::matrix</scope><name>time</name></member>
      <member refid="classnumphp_1_1matrix_1a68b6174147b35a6d15c8f5f93a65526b" prot="public" virt="non-virtual"><scope>numphp::matrix</scope><name>trace</name></member>
      <member refid="classnumphp_1_1matrix_1aae5be8e1c337b62384060fb25dca9c25" prot="public" virt="non-virtual"><scope>numphp::matrix</scope><name>transpose</name></member>
      <member refid="classnumphp_1_1matrix_1a898a823e880f6b3b3ed491146f8a0c18" prot="public" virt="non-virtual"><scope>numphp::matrix</scope><name>TWO_PI</name></member>
      <member refid="classnumphp_1_1matrix_1a86e77dec7ed3d5037b6785ae99b71327" prot="public" virt="non-virtual"><scope>numphp::matrix</scope><name>uniform</name></member>
      <member refid="classnumphp_1_1matrix_1a04e03d423dcb93afd5f0d9899b0345e2" prot="public" virt="non-virtual"><scope>numphp::matrix</scope><name>zeros</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
